(* TP8 API2
Casier Sofian
Mollet Loick

*)

open Big_int

(* question 1 *)

let r = power_int_positive_int 2 1024;;

(* # string_of_big_int r;;
- : string =
"17976931348623159077293051907890247336179769789423065727343008
115773267580550096313270847732240753602112011387987139335765878
976881441662249284743063947412437776789342486548527630221960124
609411945308295208500576883815068234246288147391311054082723716
3350510684586298239947245938479716304835356329624224137216"

Question 1-2)
*)

let ope = big_int_of_int 10000;;
let div = mod_big_int r ope;; 

(*string_of_big_int div;;      
- : string = "7216"
*)

let fourth_numb r =
	let t = ref r
	and m = (big_int_of_int 10)
	and p = (big_int_of_int 10000) in 
	while (ge_big_int !t p) = true do 
	t := (div_big_int !t m);
done;
string_of_big_int !t;;

(*
fourth_numb r;;
- : string = "1797"
*)

let carre = mult_big_int r r;;

(*
string_of_big_int carre;; 
- : string =
"32317006071311007300714876688669951960444102669715484032130345427
524655138867890893197201411522913463688717960921898019494119559150
490921095088152386448283120630877367300996091750197750389652106796
057638384067568276792218642619756161838094338476170470581645852036
305042887575891541065808607552399123930385521914333389668342420684
974786564569494856176035326322058077805659331026192708460314150258
592864177116725943603718461857357598351152301645904403697613233287
231227125684710820209725157101726931323469678542580656697935045997
268352998638215525166389437335543602135433229604645318478604952148
193555853611059596230656"

Question 2)
*)

let rec fact n =
	if n <= 1 then
	big_int_of_int 1
else
	mult_int_big_int n (fact (n - 1));;

let f_cent = fact 100;;
let long = String.length (string_of_big_int f_cent);;

(*
	val long : int = 158
*)


let eighth_numb r =
	let t = ref r
	and m = (big_int_of_int 10)
	and p = (big_int_of_int 100000000) in 
	while (ge_big_int !t p) = true do 
	t := (div_big_int !t m);
done;
string_of_big_int !t;;
(*
eighth_numb f_cent;;
- : string = "93326215"
*)

